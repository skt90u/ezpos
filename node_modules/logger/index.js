var colors = require( 'colors' ),
    _      = require( 'underscore' ),
	LOG    = colors.green( 'LOG    ' ),
	INFO   = colors.green( 'INFO   ' ),
	WARN   = colors.green( 'WARN   ' ),
	ERROR  = colors.green( 'ERROR  ' ),
	ASSERT = colors.green( 'ASSERT ' );

function logger( namespace ){
	this.namespace = colors.cyan( (namespace || 'global').toUpperCase() + ' ' );
};

logger.prototype.log = function() {

	if(_.isObject(message)) message = JSON.stringify(message);

	console.log( this.namespace + 
				 LOG + 
			     message );
};

function formatMessage()
{
	if( arguments.length == 1 && _.isObject( arguments[0] ) )
		return JSON.stringify(arguments[0]);

    var SKIP_INDEXES = 1,
        templateArgs = arguments,
        template = templateArgs[0];

    var message = template.replace(/\{\d+\}/g, function(match) {
        var index = +match.slice(1, -1),
            shiftedIndex = index + SKIP_INDEXES;

        if (shiftedIndex < templateArgs.length) {
            return templateArgs[shiftedIndex];
        }
        
        return match;
    });

    return message;
}

logger.prototype.info = function() {

	var message = formatMessage.apply(null, arguments);

	console.log( this.namespace + 
				 INFO + 
			     message );
};

logger.prototype.warn = function() {

	var message = formatMessage.apply(null, arguments);

	console.log( this.namespace + 
				 WARN + 
			     message );
};

logger.prototype.error  = function() {

	var message = formatMessage.apply(null, arguments);

	console.log( this.namespace + 
				 ERROR + 
			     message );
};

logger.prototype.assert  = function() {

	var message = formatMessage.apply(null, arguments);

	console.log( this.namespace + 
				 ASSERT + 
			     message );
};

module.exports = function( namespace ){ return new logger( namespace || '' ); };
